{"version":3,"sources":["../../app-es6/service/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BAAaA,W;;;;;;;wCAEGC,G,EAAK;AACjB,gBAAG,CAACA,IAAIC,EAAR,EACE,MAAM,IAAIC,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACF,mBAAOH,GAAP;AACD;;;8BAEGI,G,EAAK;AAAA;;AACX;AACI;;AAEA,mBAAOC,MAAMD,GAAN,EACJE,IADI,CACC;AAAA,qBAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,aADD,EAEJM,IAFI,CAEC;AAAA,qBAAON,IAAIQ,IAAJ,EAAP;AAAA,aAFD,CAAP;AAGJ;AACI;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AACG;;;+BAEIJ,G,EAAKK,I,EAAM;AAAA;;AAClB;AACI,mBAAOJ,MAAMD,GAAN,EAAW;AAChBM,uBAAS,EAAC,gBAAiB,kBAAlB,EADO;AAEhBC,sBAAQ,MAFQ;AAGhBC,oBAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHU,aAAX,EAKNH,IALM,CAKD;AAAA,qBAAO,OAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,aALC,CAAP;AAMJ;AACI;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AACG","file":"HttpService.js","sourcesContent":["export class HttpService {\n\n  _handleErrors(res) {\n    if(!res.ok) \n      throw new Error(res.statusText);\n    return res;\n  }\n\n  get(url) {\n/* ------------------------------------------------------------------------- */\n    // MODO NOVO E SIMPLIFICADO PARA FAZER A MESMA REQUISIÇÃO\n\n    return fetch(url)\n      .then(res => this._handleErrors(res))\n      .then(res => res.json());\n/* ------------------------------------------------------------------------- */\n    // MODO \"ANTIGO\" E MAIS VERBOSO DE SE FAZER UMA REQUISIÇÃO\n    \n    // return new Promise((resolve, reject) => {\n    //   let xhr = new XMLHttpRequest();\n\n    //   xhr.open('GET', url);\n\n    //   xhr.onreadystatechange = () => {\n    //     if (xhr.readyState == 4) {\n    //       if (xhr.status == 200) {\n    //         resolve(JSON.parse(xhr.responseText));\n    //       } else {\n    //         reject(xhr.responseText);\n    //       }\n    //     }\n    //   };\n    //   xhr.send();\n    // });\n/* ------------------------------------------------------------------------- */\n  }\n\n  post(url, dado) {\n/* ------------------------------------------------------------------------- */\n    return fetch(url, {\n      headers: {'Content-type' : 'application/json'},\n      method: 'post',\n      body: JSON.stringify(dado)\n    })\n    .then(res => this._handleErrors(res))\n/* ------------------------------------------------------------------------- */\n    // return new Promise((resolve, reject) => {\n    //   let xhr = new XMLHttpRequest();\n    //   xhr.open(\"POST\", url, true);\n    //   xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n\n    //   xhr.onreadystatechange = () => {\n    //     if(xhr.readyState == 4) {\n    //       if(xhr.status == 200) {\n    //         resolve(JSON.parse(xhr.responseText));\n    //       } else {\n    //         reject(xhr.responseText);\n    //       }\n    //     }\n    //   };\n    //   xhr.send(JSON.stringify(dado));\n    // });\n/* ------------------------------------------------------------------------- */\n  }\n}"]}