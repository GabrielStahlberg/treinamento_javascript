{"version":3,"sources":["../../app-es6/service/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","cb","Promise","resolve","reject","get","then","negociacoes","map","Date","objeto","data","quantidade","valor","catch","console","log","erro","all","obterNegociacaoDaSemana","obterNegociacaoDaSemanaAnterior","obterNegociacaoDaSemanaRetrasada","periodos","reduce","dados","periodo","concat","dado","Error","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","isEquals","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService';\nimport {ConnectionFactory} from './ConnectionFactory';\nimport {NegociacaoDao} from '../dao/NegociacaoDao';\nimport {Negociacao} from '../models/Negociacao';\n\nexport class NegociacaoService {\n\n  constructor() {\n    this._http = new HttpService();\n  }\n\n  obterNegociacaoDaSemanaAnterior(cb) {\n    return new Promise((resolve, reject) => {\n      this._http\n        .get('negociacoes/anterior')\n        .then(negociacoes => {\n          resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\n        })\n        .catch(erro => {\n          console.log(erro);\n          reject('Não foi possível obter as negociações da semana anterior.');\n        })\n    });\n  }\n\n  obterNegociacaoDaSemanaRetrasada(cb) {\n    return new Promise((resolve, reject) => {\n      this._http\n        .get('negociacoes/retrasada')\n        .then(negociacoes => {\n          resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\n        })\n        .catch(erro => {\n          console.log(erro);\n          reject('Não foi possível obter as negociações da semana retrasada.');\n        })\n    });\n  }\n\n  obterNegociacaoDaSemana() {\n    return new Promise((resolve, reject) => {\n      this._http\n        .get('negociacoes/semana')\n        .then(negociacoes => {\n          resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\n        })\n        .catch(erro => {\n          console.log(erro);\n          reject('Não foi possível obter as negociações da semana.');\n        })\n    });\n  }\n\n  obterNegociacoes() {        \n    return Promise.all([\n        this.obterNegociacaoDaSemana(),\n        this.obterNegociacaoDaSemanaAnterior(),\n        this.obterNegociacaoDaSemanaRetrasada()\n    ]).then(periodos => {\n        let negociacoes = periodos\n            .reduce((dados, periodo) => dados.concat(periodo), [])\n            .map(dado => new Negociacao(new Date(dado.data), dado.quantidade, dado.valor ));\n\n        return negociacoes;\n    }).catch(erro => {\n        throw new Error(erro);\n    });\n  }\n\n  cadastra(negociacao) {\n    return ConnectionFactory\n      .getConnection()\n      .then(connection => new NegociacaoDao(connection))\n      .then(dao => dao.adiciona(negociacao))\n      .then(() => 'Negociação adicionada com sucesso.')\n      .catch(erro => {\n        console.log(erro);\n        throw new Error('Não foi possível adicionar a negociação.');\n      });\n  }\n\n  lista() {\n    return ConnectionFactory\n      .getConnection()\n      .then(connection => new NegociacaoDao(connection))\n      .then(dao => dao.listaTodos())\n      .catch(erro => {\n        console.log(erro);\n        throw new Error('Não foi possível obter as negociações.');\n      })\n  }\n\n  apaga() {\n    return ConnectionFactory\n      .getConnection()\n      .then(connection => new NegociacaoDao(connection))\n      .then(dao => dao.apagaTodos())\n      .then(() => 'Negociações apagadas com sucesso.')\n      .catch(erro => {\n        console.log(erro);\n        throw new Error('Não foi possível apagar as negociações.');\n      })\n  }\n\n  importa(listaAtual) {\n    return this\n      .obterNegociacoes()\n      .then(negociacoes =>\n        negociacoes.filter(negociacao =>\n          !listaAtual.some(negociacaoExistente =>\n            negociacao.isEquals(negociacaoExistente)))\n      )\n      .catch(erro => {\n        console.log(erro);\n        throw new Error('Não foi possível importas negociações.');\n      });\n  }\n}"]}